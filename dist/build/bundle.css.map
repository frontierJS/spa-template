{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../styles.svelte",
    "../../Field.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Field } from \"$frontier-c\";\n  let name = \"\";\n  let lastName = \"Knight\";\n  let email = \"\";\n  let password = \"\";\n  let number = 2;\n  function checkForm(e) {\n    //currently only checks one at a time\n    let target = e.target,\n      form;\n    while (!form) {\n      if (target.tagName === \"FORM\") form = target;\n      else\n        target.tagName === \"BODY\"\n          ? (form = \"not found\")\n          : (target = target.parentElement);\n    }\n\n    for (let el of form) {\n      if (el.willValidate && !el.checkValidity()) return el.reportValidity();\n    }\n  }\n  $: pClass = \" box _x\";\n  $: cClass = \"-x\";\n  $: formClass = \"grid\";\n\n  $: formEx = `\n    <div class=\"${formClass}\"> // Below\n    <form> ... </form>\n    <div> Lorem... </div>\n    ....\n    </div>\n  `;\n  $: childEx = `\n    <div class=\"grid\"> //Green with editor\n    ...\n    </div>\n    <article class=\"${cClass}\"> // Editor\n    ${formEx}\n    </article>\n    <div>\n    ...\n    </div>\n  `;\n  $: parentEx = `\n  <section class=\"${pClass}\"> // Grey\n    ${childEx}\n  </section>\n  `;\n\n  let codeEnd = `\n  `;\n  function updateParent(e) {\n    let classString = parentEx\n      .match(/\"((?:\\\\.|[^\"\\\\])*)\"/)[0]\n      .replace(/['\"]+/g, \"\");\n    pClass = classString;\n  }\n  function updateChild(e) {\n    let classString = childEx.match(/\".*\"/g);\n    cClass = classString[0].replace(/['\"]+/g, \"\");\n    formClass = classString[1].replace(/['\"]+/g, \"\");\n  }\n  $: textClass = \"-r\";\n  $: textEx = `\n  <h4 class=\"${textClass}\">Header 4</h4>\n  <p class=\"${textClass}\">Paragraph</p>\n  <span class=\"${textClass}\">span</span>\n  `;\n  function updateText(e) {\n    let classString = textEx.match(/\".*\"/g);\n    console.log(classString);\n    textClass = classString[0].replace(/['\"]+/g, \"\");\n  }\n  let settingsCss = `\n    @import 'e-mixins';\n    @import 'e-reset';\n    @import 'e-base';\n  `;\n  let generalCss = `\n  @import 'u-containers'; // box, grid, & flex;\n  @import 'u-text';       // text elements;\n  @import 'u-generic';    // paddings, margins, etc..;\n  `;\n  let componentsCss = `\n  @import 'c-form-input';\n  @import 'c-button';\n  `;\n</script>\n\n<style>\n  .obj {\n    padding: 40px;\n    background-color: #e2e3e5;\n  }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9zdHlsZXMuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRTtJQUNFLGFBQWE7SUFDYix5QkFBeUI7RUFDM0IiLCJmaWxlIjoic3JjL3BhZ2VzL3N0eWxlcy5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgLm9iaiB7XG4gICAgcGFkZGluZzogNDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTJlM2U1O1xuICB9XG4iXX0= */</style>\n\n<section style=\"background-color: #bada55;\" class=\"box x\">\n  <!--        \n\n  <div class=\"grid\" style=\"\">\n    <article class=\"\">\n      <p class=\"x\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Est error, cum\n        soluta quibusdam inventore dicta, minus recusandae quae porro tempore\n        ipsa quos repudiandae facere dolores. Minus harum sed officiis sit?\n      </p>\n      <p class=\"y\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Est error, cum\n        soluta quibusdam inventore dicta, minus recusandae quae porro tempore\n        ipsa quos repudiandae facere dolores. Minus harum sed officiis sit?\n      </p>\n      <p class=\" y c\">\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Est error, cum\n        soluta quibusdam inventore dicta, minus recusandae quae porro tempore\n        ipsa quos repudiandae facere dolores. Minus harum sed officiis sit?\n      </p>\n    </article>\n    <p class=\"_l\">Paragraph of text _l</p>\n    <p class=\"_r\">Paragraph of text _r</p>\n    <span class=\"el a\">Span in the middle</span>\n    <button class=\"_r\">Button _r</button>\n    <button class=\"el\" style=\"\">El Button</button>\n    <button class=\"block y\" style=\"\">\n      <div class=\" _l\">\n        <span class=\"c\">Sign In</span>\n      </div>\n      <span>One more thing,,</span>\n      <span>This button is a block</span>\n    </button>\n  </div>\n  <div class=\"block p\" style=\"\">\n    <p class=\"_l\">Paragraph of text _l</p>\n    <span class=\"\">Span in the middle</span>\n    <button class=\"_r\">Button _r</button>\n    <button class=\"el c -c \" style=\"width:230px\">El Button</button>\n    <button class=\"_c\" style=\"width:230px\">\n      <span>Sign</span>\n      <span>In</span>\n    </button>\n  </div>\n-->\n  <div class=\"reader\">\n    <article debug>\n      <h3>Row</h3>\n      <div class=\"row c\">\n        <span class=\"\">\n          A rowdddddd is full width and a vertically stacked container\n        </span>\n        <span>A row is full width and a vertically stacked container</span>\n        <span>A row is full width and a vertically stacked container</span>\n      </div>\n    </article>\n    <article class=\"table-contents _mb_\">\n      <h1 class=\"vx++\">Philosophy</h1>\n      <h2 class=\"\">\n        Relationships\n        <small>\n          <span class=\"v-\">(Parent `x` & Children `_x` & Child '-x')</span>\n        </small>\n      </h2>\n      <article class=\"\">\n        <h3>Siblings</h3>\n        <div>\n          <span>We have to ask ourselves this question</span>\n          <br />\n          <i class=\"py fw600\">\n            When do 2 elements really become siblings and belong to the same\n            parent\n          </i>\n          <p class=\"\">It should be based on 1 thing:</p>\n          <ol class=\"\">\n            <li>\n              Could this element remain if the above where to disappear or move?\n            </li>\n          </ol>\n          <p>\n            Once it is established that 2 elements are born together and die\n            together. We see they need to be under the same `parent`.\n          </p>\n          <p>This parent is a `container` of its children.</p>\n          <p>The containers that can exist are:</p>\n          <ol class=\"pl\">\n            <li>- El</li>\n            <li>- Rows</li>\n            <li>- Blocks</li>\n            <li>- Boxes</li>\n          </ol>\n          <p>\n            The only other element is `Text` but it is never meant to be a\n            `container`\n          </p>\n          <p>The Main or Body tag acts as our `godfather`</p>\n          <p>\n            From it, we form our first children (section,header,footer) that\n            will be parents of their own if it be only containing 1 `text`\n            element.\n          </p>\n          <p>\n            And it is the `text` that forms the fundamental building blocks and\n            therefore what we must discuss next.\n          </p>\n        </div>\n      </article>\n      <article>\n        <h3 class=\"hide v_\">Visual Text (V)</h3>\n        <div class=\"\">\n          <p class=\"v+ py px** mx*\">\n            <strong>`Text`</strong>\n            is the most basic form of an element because it is the visual\n            content we want to see.\n          </p>\n          <p>It is comprised of 4 main characters:</p>\n          <ol class=\"pl\">\n            <li>- Size</li>\n            <li>- Weight (100-900)</li>\n            <li>- Spacing (X)</li>\n            <li>- Height (Y)</li>\n            <li>- Alignment(L C R)</li>\n          </ol>\n          <p>Other considerations are:</p>\n          <ol class=\"pl\">\n            <li>- Color</li>\n            <li>- Style (Italic)</li>\n            <li>- Case (Upper, Lower)</li>\n          </ol>\n          <article>\n            <h5 class=\"mt\">Size</h5>\n            <p>\n              A default \"root\" font-size is set at 12px and increases to 16px as\n              the screen size increases\n            </p>\n            <p>\n              From here we go through this path of logic to reduce options down\n              to 2:\n            </p>\n            <p>\n              If I don't want the default (or need to reset to default), do I\n              want larger or smaller?\n            </p>\n            <p>\n              Then, do I want something much greater than the current value?\n            </p>\n\n            <p>This end a</p>\n            <iframe\n              class=\"w@md\"\n              frameborder=\"0\"\n              style=\"width:100%;height:668px;\"\n              src=\"https://app.diagrams.net?lightbox=1&highlight=0000ff&edit=_blank&layers=1&nav=1&title=FCSS#R5ZpZc5s6FMc%2FjV8y4zssZvFjbSdt76TTTtNO06eMDMKoEchXCC%2F59JVAGLCw69x6AeclQUfLQT%2FJ%2FyMJ9cxxtHpPwTz8RHyIe4bmr3rmpGcYuu4a%2FJ%2BwrHOLM7Bzw4wiXxYqDQ%2FoBUqjJq0p8mFSK8gIwQzN60aPxDH0WM0GKCXLerGA4LrXOZhBxfDgAaxafyCfhUW%2FNK3M%2BADRLJSuXUtmRKAoLA1JCHyyrJjM2545poSw%2FClajSEW8Aoueb27HbmbF6MwZodUmNyRfno3%2Fka%2F9SPP%2Ffrzw%2FjzqG%2FmrSwATmWH5cuydUEA%2BhyITBLKQjIjMcC3pXVESRr7ULjReKosc0%2FInBt1bvwFGVvL0QUpI9wUsgjLXLUrsncJSakH97x%2FMSUAnUG2p5zsluhLxYEE9R6SCDK65gUoxIChRX3wgZxDs025EjN%2FkKRfQd1%2BI9StVlHXFeo%2FAO851yYYgBSLpyRjdaeMRp31MkQMPsxBxmjJda%2FONUAYjwkmNKtr%2BgC6gcftCaPkGVZybM%2BF02DfSCwgZXC1l53MdaXKSJkd2JL9siJahRKFFb2ytVPR1jo%2Bya0DJ%2FmwXZPcfSPYdadV3C0F%2B73oAT22mgRBYHiNauLbU9uyj6MmptM2OTE6HzOdQ5cq7YqahnMJznCF2GPl%2Bado6h9LpiYr2XKWWBeJmPf3sZqo1BLJslqWKuqdY0y1Vo1p8d6VH9On1Au55SECGHdVtWyrdaqlhoXvCewZNl9tmqMp5U8z8bR4Et5jXxR9ejoqet%2BCrj9oQu8aU9M%2BEXpbuzh6df3ZjL5fou%2F3O4jeHbRt1utGx2P18EBZ1%2FV2yfrgrXA3W8V9uCuaXtMWwCjSl5MV9bCyWdFvSkW%2Fuemgom%2Bj182Lo1fPzprR94xRCT9LjDo4ANawbXNfjaiLDnJ127ZIVAPmGiYKWN47VqcHMJrF%2FNnjLITAjwQD5AH8TmZEyPfzaAoT9AKmWVNiWOYExSzrhjXqWRPRFg%2Bg%2Bbnz%2Fuh5OGZ9a0VoWSrnQQNm41SY1e1mTDpP2Sg2d8W621Epm%2BekrKubzSvAbJlbWuyqWnxezOpJ5DWIxmCbc8Oi46yioavL6muYztu79UurhnGdMdDRWxYDDfXD3BVMZ2d4uek88tPn%2B3%2BTycfH7y%2B%2FJu4Caeuw4SN%2FS2azwrSB%2FMHiPNDOJ86NmNX9SLEZ9NGixtr%2BLxU3nEYBiVk%2Fp%2FKOF9Cd%2BarMFK8oOZdGDANWLZJvMQs%2For3%2F4yhv5QvynlE84%2Fks5PtYjWbM5AUQcU1MNJ474nxksuafm7Ou1q3d6H0iv%2FIYGhF%2FcHlMtb2h3225QizZpxcbRGKrHE%2BTeZ61ldYOKJLzTZhKb3GAh79Na5vhVb919I%2FZweaPKUdov9lf43HTqWEqr7K5LNZ89nV0f%2BLHucvZofV3HJKenJUUlgbnR%2FCet970I3ulRG2tDf5wcAaSeX7POEArcdi2WTlkynScaF8P9g0b3o2tFuzd10d7nixvIGd5lXvc5u1v\" />\n          </article>\n\n        </div>\n        <span class=\"v__\">V__ text</span>\n        <span class=\"v_\">V_ text</span>\n        <span class=\"v--\">V-- text</span>\n        <span class=\"v-\">V- text</span>\n        <p>\n          <span class=\"v\">V Default text</span>\n        </p>\n        <span class=\"v+\">V+ text</span>\n        <span class=\"v++\">V+ text</span>\n        <span class=\"v*\">V* text</span>\n        <span class=\"v**\">V** text</span>\n        <hr />\n        <div class=\"v__\">V__ text</div>\n        <div class=\"v_\">V_ text</div>\n        <div class=\"v--\">V-- text</div>\n        <div class=\"v-\">V- text</div>\n        <div class=\"v\">V Default text</div>\n        <div class=\"v+\">V+ text</div>\n        <div class=\"v++\">V++ text</div>\n        <div class=\"v*\">V* text</div>\n        <div class=\"v**\">V** text</div>\n        <small>\n          <div class=\"v** v700\">default text</div>\n        </small>\n        <big>\n          <div class=\"v** v700 m__ \">default text</div>\n        </big>\n        <hr />\n        <article>\n          <h3>Element</h3>\n          <p>A element becomes flex when layout is set. default row</p>\n          <p>A row is full width and a vertically stacked container</p>\n        </article>\n        <article>\n          <h3>Row</h3>\n          <div class=\"row c\">\n            <span>A row is full width and a vertically stacked container</span>\n          </div>\n        </article>\n        <article>\n          <h3 class=\"\">Block</h3>\n          <p>A block is full width and a horizontally stacked container</p>\n        </article>\n        <h3>Box, Grid and Containers</h3>\n        <article>\n          <h4>Containers/Blocks (flex)?</h4>\n          <p>A container becomes flex when layout is set. default column</p>\n        </article>\n        <article>\n          <h4>Boxes and box items</h4>\n          <p>\n            A box assumes it is dealing with blocks and so you have to declare\n            `el`\n          </p>\n          <p>\n            A container assumes it is dealing with elements and so you have to\n            declare `block`\n          </p>\n          <p>Being a box item just does 5 things:</p>\n          <ul class=\"block -c\">\n            <li class=\"el -l\">1. Display: block</li>\n            <li>2. width: 100%</li>\n            <li>3. Sets your min-width not to get smaller than an 256px</li>\n            <li>4. Sets your max-width not to get larger than the box</li>\n            <li>5. sets margins for the item appropriately</li>\n          </ul>\n        </article>\n        <h4>Grids and grid items</h4>\n        <h2>Sizing (Width/Padding/Margins)</h2>\n        <h3>Width & Height</h3>\n        <h3>Padding</h3>\n        <h4>Background of a block is the padding</h4>\n        <h3>Margin</h3>\n        <h2>Spacing (Layout/Position)</h2>\n        <h3>Center & All</h3>\n        <h3>X axis</h3>\n        <h3>Left and Right</h3>\n        <h3>Y axis</h3>\n        <h4>Top and Bottom</h4>\n        <h2>Breakpoints</h2>\n        <h3>A Block (8rem / 128px)</h3>\n        <h3>10 sizes of concern (128 to 1280)</h3>\n        <h3>The Cross Axises</h3>\n        <h2>Core Elements</h2>\n        <h3>Forms & Inputs</h3>\n        <h3>Buttons</h3>\n        <h2>The Defaults</h2>\n        <h2>FrontierCSS Structure</h2>\n        <h2>Misc</h2>\n        <h6>Backgrounds should padding auto applied</h6>\n      </article>\n    </article>\n  </div>\n  <figure class=\"ce ce-lift ce-twist\" style=\"\">\n    <figcaption class=\"ce_caption\">\n      <h3>// Settings</h3>\n    </figcaption>\n    <pre class=\"ce_pre\">\n      <code contenteditable spellcheck=\"false\" class=\"language-css\">\n        {settingsCss}\n      </code>\n    </pre>\n  </figure>\n  <figure class=\"ce ce-lift ce-twist\" style=\"\">\n    <figcaption class=\"ce_caption\">\n      <h3>// General</h3>\n    </figcaption>\n    <pre class=\"ce_pre\">\n      <code contenteditable spellcheck=\"false\" class=\"language-css\">\n        {generalCss}\n      </code>\n    </pre>\n  </figure>\n\n  <figure class=\"ce ce-lift ce-twist\" style=\"\">\n    <figcaption class=\"ce_caption\">\n      <h3>// Components</h3>\n    </figcaption>\n    <pre class=\"ce_pre\">\n      <code contenteditable spellcheck=\"false\" class=\"language-css\">\n        {componentsCss}\n      </code>\n    </pre>\n  </figure>\n  <div\n    class=\"grid\"\n    style=\"background-color: #d4edda; border: 3px solid #c3e6cb;\">\n    <h2 class=\"_c\">Child of box</h2>\n    <figure class=\"ce ce-lift ce-twist\" style=\"min-width:356px\">\n      <figcaption class=\"ce_caption\">\n        <h3>Relationships</h3>\n      </figcaption>\n      <pre class=\"ce_pre\">\n        <code\n          contenteditable\n          spellcheck=\"false\"\n          class=\"language-html\"\n          bind:textContent={parentEx}\n          on:keyup={updateParent} />\n      </pre>\n    </figure>\n  </div>\n  <article class={cClass}>\n    <figure class=\"ce ce-lift ce-twist\" style=\"width:100%; max-width: 100%;\">\n      <figcaption class=\"ce_caption\">\n        <h3>Child of box (I'm the article tag below)</h3>\n      </figcaption>\n      <pre class=\"ce_pre\">\n        <code\n          contenteditable\n          spellcheck=\"false\"\n          class=\"language-html\"\n          bind:textContent={childEx}\n          on:keyup={updateChild} />\n      </pre>\n    </figure>\n    <div class={formClass} style=\"background-color: #cce5ff;\">\n      <form style=\"min-width:500px\">\n        <Field classes=\"\" name=\"name\" value={name} />\n        <Field classes=\"\" name=\"email\" type=\"email\" value={email} />\n        <Field name=\"password\" type=\"password\" value={password} />\n        <Field label=\"Numberfield\" type=\"number\" name=\"number\" value={number} />\n        <Field name=\"last_name\" value={lastName} />\n        <button\n          class=\"\"\n          on:mouseenter={checkForm}\n          on:click={() => alert('Good Test')}>\n          Sign Up\n        </button>\n      </form>\n      <div>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Hic dolore\n          officiis ducimus reprehenderit optio aliquam repellendus architecto\n          odio maiores. Itaque adipisci nam laboriosam doloribus assumenda totam\n          at voluptates commodi minima?\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Hic dolore\n          officiis ducimus reprehenderit optio aliquam repellendus architecto\n          odio maiores. Itaque adipisci nam laboriosam doloribus assumenda totam\n          at voluptates commodi minima?\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Hic dolore\n          officiis ducimus reprehenderit optio aliquam repellendus architecto\n          odio maiores. Itaque adipisci nam laboriosam doloribus assumenda totam\n          at voluptates commodi minima?\n        </p>\n      </div>\n      <button\n        class=\"_r\"\n        on:mouseenter={checkForm}\n        on:click={() => alert('More info')}>\n        More Info\n      </button>\n    </div>\n  </article>\n\n  <div style=\"background-color:#fff3cd;\">\n    <div class=\"m -p-lg\" style=\"background-color:white;\">\n      <h4 class={textClass}>Header 4</h4>\n      <p class={textClass}>Paragraph</p>\n      <span class={textClass}>span</span>\n    </div>\n    <h2 class=\"_c\">Working with Inline Text</h2>\n    <figure class=\"ce ce-lift ce-twist\" style=\"min-width:356px\">\n      <figcaption class=\"ce_caption\">\n        <h3>Text</h3>\n      </figcaption>\n      <pre class=\"ce_pre\">\n        <code\n          contenteditable\n          spellcheck=\"false\"\n          class=\"language-html\"\n          bind:textContent={textEx}\n          on:keyup={updateText} />\n      </pre>\n    </figure>\n\n  </div>\n  <div>\n    <div class=\"box border mb -pb\">\n      <div class=\"-x obj\">-x</div>\n      <div class=\"-l obj\">-l</div>\n      <div class=\"-r obj\">-r _c</div>\n      <div class=\"el -c obj _c\">-c el _c</div>\n      <div class=\"x border\">\n        <h4 class=\"el _r\">Header 4 -r</h4>\n        <p class=\"el _x\">Paragraph</p>\n        <span class=\"el _c\">span</span>\n        <p>.box.x</p>\n        <p>.box.x@$bp</p>\n        <p>.box.-x > *</p>\n        <p>.box.-x@$bp > *</p>\n        <p>.box > ._x</p>\n        <p>.box > ._x@$bp</p>\n      </div>\n    </div>\n  </div>\n</section>\n",
    "<script>\n    export let type = 'text'\n    export let value\n    export let name\n    export let label = name.replace('_', ' ')\n    export let placeholder = name\n    export let errors = []\n    export let help = ''\n    export let required = false\n    export let classes = \"\"\n</script>\n\n<fieldset class=\"field {classes}\">\n    <div class='control'>\n        {#if type === 'text'}\n            <input type='text' {name} bind:value {placeholder} {required}>\n        {:else if type === 'email'}\n            <input type='email' {name} bind:value {placeholder} {required}>\n        {:else if type === 'password'}\n            <input type='password' {name} bind:value {placeholder} {required}>\n        {:else if type === 'hidden'}\n            <input type='hidden' {name} bind:value={value} {placeholder}>\n        {:else}\n        <input type='text' {name} bind:value={value} {placeholder} {required}>\n        {/if}\n        {#if label != 'display-none'}\n            <label for={name}>{label}</label>\n        {/if}\n    </div>\n    {#if errors.length}\n        <p class='error'>{errors[0]}</p>\n    {:else if help}\n        <p class='help'>{help}</p>\n    {/if}\n</fieldset>\n\n<style>\n    input::-webkit-input-placeholder {\n        text-transform: capitalize;\n    }\ninput::-moz-placeholder {\n        text-transform: capitalize;\n    }\ninput:-ms-input-placeholder {\n        text-transform: capitalize;\n    }\ninput::-ms-input-placeholder {\n        text-transform: capitalize;\n    }\ninput::placeholder, label {\n        text-transform: capitalize;\n    }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9AZnJvbnRpZXJqcy9mcm9udGVuZC9jb21wb25lbnRzL0ZpZWxkLnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7UUFDSSwwQkFBMEI7SUFDOUI7QUFGQTtRQUNJLDBCQUEwQjtJQUM5QjtBQUZBO1FBQ0ksMEJBQTBCO0lBQzlCO0FBRkE7UUFDSSwwQkFBMEI7SUFDOUI7QUFGQTtRQUNJLDBCQUEwQjtJQUM5QiIsImZpbGUiOiJub2RlX21vZHVsZXMvQGZyb250aWVyanMvZnJvbnRlbmQvY29tcG9uZW50cy9GaWVsZC5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICBpbnB1dDo6cGxhY2Vob2xkZXIsIGxhYmVsIHtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgfVxuIl19 */</style>\n"
  ],
  "names": [],
  "mappings": "AA4FE,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,OAAO,AAC3B,CAAC;AC1DC,mBAAK,2BAA2B,AAAC,CAAC,AAC9B,cAAc,CAAE,UAAU,AAC9B,CAAC,AACL,mBAAK,kBAAkB,AAAC,CAAC,AACjB,cAAc,CAAE,UAAU,AAC9B,CAAC,AACL,mBAAK,sBAAsB,AAAC,CAAC,AACrB,cAAc,CAAE,UAAU,AAC9B,CAAC,AACL,mBAAK,uBAAuB,AAAC,CAAC,AACtB,cAAc,CAAE,UAAU,AAC9B,CAAC,AACL,mBAAK,aAAa,CAAE,KAAK,cAAC,CAAC,AACnB,cAAc,CAAE,UAAU,AAC9B,CAAC"
}