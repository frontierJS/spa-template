/* ==========================================================================
  Stylesheet for FrontierJS
  ITCSS + BEM
   ========================================================================== */
/* Settings: preprocessor variables, colors, global settings
   ========================================================================== */
/* ==========================================================================
  Settings: Colors
  Only define colors here. Don't use sass color functions, stick to hex values,
  or the color component in styleguide won't regenerate automatically anymore.
 ========================================================================== */
/* Grays - Defaults for any project
 ========================================================================== */
/* Key colors
  ========================================================================== */
/* ==========================================================================
  Theme Colors:

  Once colors are defined, use _c-semantic-colors 
  to define primary, secondary, etc
 ========================================================================== */
/* Example
* You can use @include bp({start}, {stop})
* or an single breakpoint @include sm({stop})


.example {
  @include bl(sec) {
    
  }
   @include xs(md) {
    .item {
      background-color: blue;
    }
  }
  @include md(xl) {
    .item {
      background-color: green;
    }
  }
   @include xl {
    .item {
      background-color: red;
    }
  }
}

@mixin site-layout() {
  //DEFAULT
  display: flex;
  flex-flow: column;
  .links {
    display: none;
  }

  // XXS
  @include xxs { }
  // XS
  @include xs { }

  // SM
  @include sm {
    display: grid;
    grid: [start] 1fr [end] / [start] 
      repeat(auto-fit, minmax($block, 1fr)) [end]; 
    
    .search {
      grid-column: start / span 2;
    }
    .footer {
      grid-column: start / end;
    }
    .links {
      display: block;
      @include g-span;
    }
    .content {
      @include g-span(3, end);
    }
  }

  // MD
  @include md {
    .content {
      @include g-span(3, -2);
    }
    .links {
      @include g-span(-2, -1);
    }
  }

  // ML
  @include ml { }
  // LG
  @include lg { }
  // XL
  @include xl { }
  // XXL
  @include xxl { }
  
}

.app {
  height: 100%;
  font-size: 22px;
  @include template;
  @include site-layout;
}

*/
/* Generic: CSS reset, box-sizing, global CSS tweaks
   ========================================================================== */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input:required {
  box-shadow: none; }

input:invalid {
  box-shadow: none; }

/* Elements: element selectors, CMS-generated content
   ========================================================================== */
/* Objects: layout-related CSS, grid, SVG icons frame, flexbox classes
   ========================================================================== */
/* Components: separately styled components (buttons, form inputs, toolbars...)
   ========================================================================== */
/* Forms 
   ========== */
/* Buttons
   ========== */
/* Utilities: specific helper classes, overrides
   ========================================================================== */
/*
What about word wrap?
   What do br and hr do ??
   what about an aside?? what if asides have display none at certian media queries
   Defaults change relative to the breakpoints so for example:
   $default-margin: 10%;
   as we get bigger
   @include md {
      $default-margin: 12%;
   }
   Most importantly!!
   I want a methodology for styling
   a way to think about it so I don't have to think about it
Containing things (including modals maybe?)
Lists
Key Elements
- Lists
- Tables
- Links
- Buttons
- Inputs (Selects and Checkboxes)
Text Content
- Headers
- Bodys
Variables
- Fonts
- Colors
- Standard Sizings (padding, margins, breakpoints)
*/
/* Blocks/Containers - Containing things (including modals maybe?)
   Will be display:block for the most part
    <article> 
    <div>
    <section>
    <nav> 
   ========================================================================== */
/* Content / Elements
   ========================================================================== */
/* Text Blocks:
   Examples of block-level elements:
    <h1> - <h6>
    <form>
    <header>
    <footer>
   ========================================================================== */
/* Text:
   <span> | Inline-block | Use when you want no style applied but need to group nodes together 
   <p> | block |  Use when you want no style but display: block
   Things we are about text from here:
   - padding
   - margin : right and bottom
   - border ?
   ========================================================================== */
.p {
  padding: 1.5em 3em; }

.pr {
  padding-right: 1.5em; }

.pl {
  padding-left: 1.5em; }

.p-none {
  padding: 0; }

.p-x {
  padding-left: 1.5em;
  padding-right: 1.5em; }

.p-y {
  padding-top: 3em;
  padding-bottom: 3em; }

.m {
  margin: 1rem 2rem; }

.m-auto {
  margin: auto; }

.m-none {
  margin: 0; }

.mt {
  margin-top: 1rem; }

.mb {
  margin-bottom: 1rem; }

.ml {
  margin-left: 2rem; }

.mr {
  margin-right: 2rem; }

.mt-auto {
  margin-top: auto; }

.mb-auto {
  margin-bottom: auto; }

.ml-auto {
  margin-left: auto; }

.mr-auto {
  margin-right: auto; }

.mx {
  margin-left: 1rem;
  margin-right: 1rem; }

.mx-auto {
  margin-left: auto;
  margin-right: auto; }

.my {
  margin-top: 2rem;
  margin-bottom: 2rem; }

.my-auto {
  margin-top: auto;
  margin-bottom: auto; }

.border {
  border: 1px solid #222222; }

.border-none {
  border: none; }

/************************** need systems for these
Font weight
Width
Height
Border radius
Opacity
***********************/
.line-h-1 {
  line-height: 1; }

.line-h {
  line-height: 1.5; }

.line-h-2 {
  line-height: 2; }

.db {
  border: 1px solid red; }
  .db .db {
    margin: 1px;
    border: 1px solid blue; }

main {
  height: 99vh; }

button {
  font-size: inherit;
  font-weight: bold;
  background-color: blue;
  color: #fff;
  padding: 1.5em 3em; }
  button:hover {
    background-color: violet; }

input,
textarea,
.select select {
  line-height: 1.5;
  margin: 0;
  padding: 0.3em 0.6em;
  border: 1px solid #ccc;
  background-color: #fff;
  border-radius: 0.2em;
  transition: all 0.3s;
  display: block;
  margin-bottom: 20px; }

a {
  text-decoration: none;
  color: #00549e; }
  a:hover {
    color: #3980ec; }

html {
  font-size: 0.75rem;
  line-height: 1.5; }
  html .debug {
    border: 3px solid violet; }

@media (max-width: 160rem) and (min-width: 24rem) {
  html .debug {
    border: 3px solid green; } }

@media (max-width: 160rem) and (min-width: 32rem) {
  html .debug {
    border: 3px solid red; } }

@media (max-width: 160rem) and (min-width: 40rem) {
  html .debug {
    border: 3px solid orange; } }

@media (max-width: 160rem) and (min-width: 48rem) {
  html .debug {
    border: 3px solid yellow; } }

@media (max-width: 160rem) and (min-width: 56rem) {
  html .debug {
    border: 3px solid green; } }

@media (max-width: 160rem) and (min-width: 64rem) {
  html .debug {
    border: 3px solid blue; } }

@media (max-width: 160rem) and (min-width: 72rem) {
  html .debug {
    border: 3px solid indigo; } }

@media (max-width: 160rem) and (min-width: 80rem) {
  html .debug {
    border: 3px solid violet; } }
  html section,
  html div,
  html article,
  html header,
  html footer,
  html nav {
    display: block; }
  html p,
  html h1,
  html h2,
  html h3,
  html h4,
  html h5,
  html h6 {
    display: block; }
    html p.xxs,
    html h1.xxs,
    html h2.xxs,
    html h3.xxs,
    html h4.xxs,
    html h5.xxs,
    html h6.xxs {
      font-size: 0.5rem; }
    html p.xs,
    html h1.xs,
    html h2.xs,
    html h3.xs,
    html h4.xs,
    html h5.xs,
    html h6.xs {
      font-size: 0.75rem; }
    html p.sm,
    html h1.sm,
    html h2.sm,
    html h3.sm,
    html h4.sm,
    html h5.sm,
    html h6.sm {
      font-size: 0.875rem; }
    html p.md,
    html h1.md,
    html h2.md,
    html h3.md,
    html h4.md,
    html h5.md,
    html h6.md {
      font-size: 1rem; }
    html p.lm,
    html h1.lm,
    html h2.lm,
    html h3.lm,
    html h4.lm,
    html h5.lm,
    html h6.lm {
      font-size: 1.25rem; }
    html p.lg,
    html h1.lg,
    html h2.lg,
    html h3.lg,
    html h4.lg,
    html h5.lg,
    html h6.lg {
      font-size: 1.5rem; }
    html p.xl,
    html h1.xl,
    html h2.xl,
    html h3.xl,
    html h4.xl,
    html h5.xl,
    html h6.xl {
      font-size: 2rem; }
    html p.xxl,
    html h1.xxl,
    html h2.xxl,
    html h3.xxl,
    html h4.xxl,
    html h5.xxl,
    html h6.xxl {
      font-size: 3rem; }
    html p.align,
    html h1.align,
    html h2.align,
    html h3.align,
    html h4.align,
    html h5.align,
    html h6.align {
      text-align: center; }
    html p.left-align,
    html h1.left-align,
    html h2.left-align,
    html h3.left-align,
    html h4.left-align,
    html h5.left-align,
    html h6.left-align {
      text-align: left; }
    html p.right-align,
    html h1.right-align,
    html h2.right-align,
    html h3.right-align,
    html h4.right-align,
    html h5.right-align,
    html h6.right-align {
      text-align: right; }
    html p.center-align,
    html h1.center-align,
    html h2.center-align,
    html h3.center-align,
    html h4.center-align,
    html h5.center-align,
    html h6.center-align {
      text-align: center; }
  html span,
  html input,
  html img,
  html button,
  html a {
    display: inline-block;
    line-height: 1.5; }
    html span.xxs,
    html input.xxs,
    html img.xxs,
    html button.xxs,
    html a.xxs {
      font-size: 0.5rem; }
    html span.xs,
    html input.xs,
    html img.xs,
    html button.xs,
    html a.xs {
      font-size: 0.75rem; }
    html span.sm,
    html input.sm,
    html img.sm,
    html button.sm,
    html a.sm {
      font-size: 0.875rem; }
    html span.md,
    html input.md,
    html img.md,
    html button.md,
    html a.md {
      font-size: 1rem; }
    html span.lm,
    html input.lm,
    html img.lm,
    html button.lm,
    html a.lm {
      font-size: 1.25rem; }
    html span.lg,
    html input.lg,
    html img.lg,
    html button.lg,
    html a.lg {
      font-size: 1.5rem; }
    html span.xl,
    html input.xl,
    html img.xl,
    html button.xl,
    html a.xl {
      font-size: 2rem; }
    html span.xxl,
    html input.xxl,
    html img.xxl,
    html button.xxl,
    html a.xxl {
      font-size: 3rem; }
  html .flex,
  html article {
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
    align-items: center; }
    html .flex.flex-start,
    html article.flex-start {
      justify-content: flex-start; }
    html .flex.space-between,
    html article.space-between {
      justify-content: space-between; }
    html .flex.space-around,
    html article.space-around {
      justify-content: space-around; }
    html .flex.align-start,
    html article.align-start {
      align-items: start; }
    html .flex.align-end,
    html article.align-end {
      align-items: end; }
    html .flex.row,
    html article.row {
      flex-direction: row; }
    html .flex.no-wrap,
    html article.no-wrap {
      flex-wrap: nowrap; }
    html .flex.stretch-all,
    html article.stretch-all {
      align-items: stretch; }
    html .flex.grow-all > *,
    html article.grow-all > * {
      flex: 1 1 auto; }
    html .flex.fill-all,
    html article.fill-all {
      align-items: stretch; }
      html .flex.fill-all > *,
      html article.fill-all > * {
        flex: 1 1 auto; }
    html .flex > section,
    html .flex > nav,
    html article > section,
    html article > nav {
      align-self: stretch; }
    html .flex > *.baseline,
    html article > *.baseline {
      align-self: baseline; }
    html .flex > *.stretch,
    html article > *.stretch {
      align-self: stretch; }
    html .flex > *.grow,
    html article > *.grow {
      flex-grow: 1; }
    html .flex > *.fill,
    html article > *.fill {
      align-self: stretch;
      flex-grow: 1; }

@media (max-width: 160rem) and (min-width: 48rem) {
  html {
    font-size: 0.875rem; } }

@media (max-width: 160rem) and (min-width: 64rem) {
  html {
    font-size: 1rem; } }

/*# sourceMappingURL=index.css.map */